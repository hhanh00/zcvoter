// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'election.freezed.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `fmt`

Future<void> createDirectoryDb({required String directory}) =>
    RustLib.instance.api
        .crateApiElectionCreateDirectoryDb(directory: directory);

Future<String> connectElection(
        {required String url, required String lwd, required String seed}) =>
    RustLib.instance.api
        .crateApiElectionConnectElection(url: url, lwd: lwd, seed: seed);

Future<List<ElectionRec>> listElections() =>
    RustLib.instance.api.crateApiElectionListElections();

Future<ElectionData> getElection({required String hash}) =>
    RustLib.instance.api.crateApiElectionGetElection(hash: hash);

bool isValidSeed({required String seed}) =>
    RustLib.instance.api.crateApiElectionIsValidSeed(seed: seed);

Stream<int> electionSynchronize({required String hash}) =>
    RustLib.instance.api.crateApiElectionElectionSynchronize(hash: hash);

@freezed
class Answer with _$Answer {
  const factory Answer({
    required String address,
    required String value,
  }) = _Answer;
}

@freezed
class ElectionData with _$ElectionData {
  const factory ElectionData({
    required String name,
    required int startHeight,
    required int endHeight,
    required String question,
    required List<Answer> answers,
  }) = _ElectionData;
}

@freezed
class ElectionRec with _$ElectionRec {
  const factory ElectionRec({
    required PlatformInt64 id,
    required String hash,
    required String name,
    required String question,
  }) = _ElectionRec;
}
